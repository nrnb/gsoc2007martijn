Index: trunk/src/core/org/pathvisio/model/PathwayElement.java
===================================================================
--- trunk/src/core/org/pathvisio/model/PathwayElement.java	(revision 1133)
+++ trunk/src/core/org/pathvisio/model/PathwayElement.java	(revision 1134)
@@ -472,6 +472,14 @@
 			}
 			result.add(PropertyType.TEXTLABEL);
 			break;
+		case ObjectType.INFOBOX:
+			result.add(PropertyType.CENTERX);
+			result.add(PropertyType.CENTERY);
+			break;
+		case ObjectType.LEGEND:
+			result.add(PropertyType.CENTERX);
+			result.add(PropertyType.CENTERY);
+			break;
 		}
 		return result;
 	}
Index: trunk/src/swt/org/pathvisio/gui/swt/GuiMain.java
===================================================================
--- trunk/src/swt/org/pathvisio/gui/swt/GuiMain.java	(revision 1133)
+++ trunk/src/swt/org/pathvisio/gui/swt/GuiMain.java	(revision 1134)
@@ -25,6 +25,7 @@
 import org.eclipse.swt.graphics.ImageData;
 import org.eclipse.swt.widgets.Display;
 import org.pathvisio.Engine;
+import org.pathvisio.Revision;
 import org.pathvisio.data.Gdb;
 import org.pathvisio.data.Gex;
 import org.pathvisio.debug.Logger;
@@ -98,6 +99,15 @@
 		} catch(Exception e) {}
 		Logger.log.setLogLevel(true, true, true, true, true, true);//Modify this to adjust log level
 
+		Logger.log.info ("Revision: " + Revision.REVISION);
+		Logger.log.info ("Java version: " +
+						 System.getProperty ("java.version") + ", " +
+						 System.getProperty ("java.vendor"));
+		Logger.log.info ("Java home: " + System.getProperty ("java.home"));
+		Logger.log.info ("OS: " + System.getProperty ("os.name") +
+						 System.getProperty ("os.version") + System.getProperty ("os.arch"));
+		Logger.log.info ("Username: " + System.getProperty ("user.name"));
+		
 		Logger.log.trace ("Log initialized");
 		//load the preferences
 		loadPreferences();
Index: trunk/build.xml
===================================================================
--- trunk/build.xml	(revision 1133)
+++ trunk/build.xml	(revision 1134)
@@ -27,7 +27,7 @@
 	<property name="exec.inno.setup" value="iscc"/>
 	
 	<property name="wikipathways.class.path" value="lib/jdom.jar lib/resources.jar lib/derbyclient.jar lib/swing-worker-1.1.jar lib/apache/commons-codec-1.3.jar lib/apache/commons-httpclient-3.0.1.jar lib/apache/commons-logging-1.1.jar lib/apache/ws-commons-util-1.0.1.jar lib/apache/xmlrpc-client-3.0.jar lib/apache/xmlrpc-common-3.0.jar"/>
-	<property name="jar.class.path" value="${wikipathways.class.path} lib/derby.jar lib/R-resources.jar lib/swt-win32-lib/swt.jar lib/swt-linux-lib/swt.jar lib/org.eclipse.core.commands.jar lib/org.eclipse.equinox.common.jar lib/org.eclipse.jface.jar lib/hsqldb.jar lib/JRI.jar lib/BrowserLauncher.jar lib/plugins.jar lib/batik/batik-awt-util.jar lib/batik/batik-bridge.jar lib/batik/batik-css.jar lib/batik/batik-dom.jar lib/batik/batik-ext.jar lib/batik/batik-extension.jar lib/batik/batik-gvt.jar lib/batik/batik-parser.jar lib/batik/batik-anim.jar lib/batik/xml-apis-ext.jar lib/batik/batik-script.jar lib/batik/batik-svg-dom.jar lib/batik/batik-svggen.jar lib/batik/batik-transcoder.jar lib/batik/batik-util.jar lib/batik/batik-xml.jar lib/batik/pdf-transcoder.jar lib/batik/xml-apis.jar"/>
+	<property name="jar.class.path" value="${wikipathways.class.path} lib/derby.jar lib/R-resources.jar lib/swt-linux-lib/swt.jar lib/swt-linux-lib/swt.jar lib/org.eclipse.core.commands.jar lib/org.eclipse.equinox.common.jar lib/org.eclipse.jface.jar lib/hsqldb.jar lib/JRI.jar lib/BrowserLauncher.jar lib/plugins.jar lib/batik/batik-awt-util.jar lib/batik/batik-bridge.jar lib/batik/batik-css.jar lib/batik/batik-dom.jar lib/batik/batik-ext.jar lib/batik/batik-extension.jar lib/batik/batik-gvt.jar lib/batik/batik-parser.jar lib/batik/batik-anim.jar lib/batik/xml-apis-ext.jar lib/batik/batik-script.jar lib/batik/batik-svg-dom.jar lib/batik/batik-svggen.jar lib/batik/batik-transcoder.jar lib/batik/batik-util.jar lib/batik/batik-xml.jar lib/batik/pdf-transcoder.jar lib/batik/xml-apis.jar"/>
 	<path id="project.v1.class.path">
 		<pathelement location="${build.v1.dir}"/>
 		<fileset dir="lib">
Index: trunk/tools/gpmldiff/src/org/pathvisio/gpmldiff/PwyDoc.java
===================================================================
--- trunk/tools/gpmldiff/src/org/pathvisio/gpmldiff/PwyDoc.java	(revision 1133)
+++ trunk/tools/gpmldiff/src/org/pathvisio/gpmldiff/PwyDoc.java	(revision 1134)
@@ -17,11 +17,13 @@
 package org.pathvisio.gpmldiff;
 
 import java.io.File;
+import java.io.PrintStream;
 import java.util.ArrayList;
 import java.util.HashSet;
 import java.util.List;
 import java.util.Set;
-
+import java.util.Map;
+import java.util.HashMap;
 import org.pathvisio.debug.Logger;
 import org.pathvisio.model.ConverterException;
 import org.pathvisio.model.Pathway;
@@ -109,7 +111,57 @@
 			add (e);
 		}
 	}
+
+	/**
+	   Calculates a table with similarity scores.
+	*/
+	static public Map <PathwayElement, Map <PathwayElement, Integer>> getSimTable (PwyDoc oldDoc, PwyDoc newDoc, SimilarityFunction simFun)		
+	{
+		Map <PathwayElement, Map <PathwayElement, Integer>> result =
+			new HashMap <PathwayElement, Map <PathwayElement, Integer>>();
 		
+		for (PathwayElement oldElt : oldDoc.getElts())
+		{
+			Map <PathwayElement, Integer> row = new HashMap <PathwayElement, Integer>();
+			
+			for (PathwayElement newElt : newDoc.getElts())
+			{
+				row.put (newElt, simFun.getSimScore(oldElt, newElt));
+			}
+			result.put (oldElt, row);
+		}
+
+		return result;
+	}
+
+	static public void printSimTable (PwyDoc oldDoc, PwyDoc newDoc, SimilarityFunction simFun)
+	{
+		PrintStream out = System.out;
+
+		// empty corner cell
+		out.print ("\t"); 
+		// column headers
+		for (PathwayElement newElt : newDoc.getElts())
+		{			
+			out.print(PwyElt.summary(newElt));
+			out.print("\t");
+		}
+		out.println();
+		for (PathwayElement oldElt : oldDoc.getElts())
+		{
+			// row header.
+			out.print (PwyElt.summary (oldElt));
+			out.print ("\t");
+			// row data
+			for (PathwayElement newElt : newDoc.getElts())
+			{
+				out.print (simFun.getSimScore(oldElt, newElt));
+				out.print ("\t");
+			}
+			out.println();
+		}		
+	}
+	
 	/**
 	   Finds correspondence set with the lowest cost using Dijkstra's algorithm
 	   //TODO: currently not using Dijkstra's algorithm but ad-hoc.
Index: trunk/tools/gpmldiff/src/org/pathvisio/gpmldiff/GlassPane.java
===================================================================
--- trunk/tools/gpmldiff/src/org/pathvisio/gpmldiff/GlassPane.java	(revision 0)
+++ trunk/tools/gpmldiff/src/org/pathvisio/gpmldiff/GlassPane.java	(revision 1134)
@@ -0,0 +1,210 @@
+// PathVisio,
+// a tool for data visualization and analysis using Biological Pathways
+// Copyright 2006-2007 BiGCaT Bioinformatics
+//
+// Licensed under the Apache License, Version 2.0 (the "License"); 
+// you may not use this file except in compliance with the License. 
+// You may obtain a copy of the License at 
+// 
+// http://www.apache.org/licenses/LICENSE-2.0 
+//  
+// Unless required by applicable law or agreed to in writing, software 
+// distributed under the License is distributed on an "AS IS" BASIS, 
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
+// See the License for the specific language governing permissions and 
+// limitations under the License.
+//
+package org.pathvisio.gpmldiff;
+
+import java.awt.AWTEvent;
+import java.awt.Color;
+import java.awt.Cursor;
+import java.awt.Font;
+import java.awt.Graphics2D;
+import java.awt.Graphics;
+import java.awt.MouseInfo;
+import java.awt.Point;
+import java.awt.Rectangle;
+import java.awt.Shape;
+import java.awt.event.AWTEventListener;
+import java.awt.event.MouseEvent;
+import java.awt.font.*;
+import java.awt.geom.Rectangle2D;
+import java.awt.geom.RoundRectangle2D;
+import java.text.*;
+import java.util.ArrayList;
+import java.util.HashMap;
+import java.util.List;
+import java.util.Map;
+import javax.swing.*;
+
+/**
+ * GlassPane tutorial
+ * "A well-behaved GlassPane"
+ * http://weblogs.java.net/blog/alexfromsun/
+ * <p/>
+ * This is the final version of the GlassPane
+ * it is transparent for MouseEvents,
+ * and respects underneath component's cursors by default,
+ * it is also friedly for other users,
+ * if someone adds a mouseListener to this GlassPane
+ * or set a new cursor it will respect them
+ *
+ * @author Alexander Potochkin
+ */
+class GlassPane extends JPanel implements AWTEventListener
+{
+    private final JFrame frame;
+    private Point point = new Point();
+
+	// baloon margin is both the horizontal and vertical margin.
+	private static final int BALOON_SPACING = 50;
+	private static final int BALOON_MARGIN = 20;
+	private static final Color BALOON_PAINT = Color.YELLOW;
+	private static final int HINT_FONT_SIZE = 11;
+	
+	private boolean alignTop = true;
+	
+    public GlassPane(JFrame frame)
+	{
+        super(null);
+        this.frame = frame;
+        setOpaque(false);
+    }
+
+	boolean showHint = false;
+	Map <String, String> hint = null;
+
+    // view coordinates
+	double x1, y1, x2, y2;
+
+	/**
+	   setHint implies showHint (true)
+	 */
+	void setHint(Map <String, String> _hint, double _x1, double _y1, double _x2, double _y2)
+	{
+		hint = _hint;
+		x1 = _x1;
+		y1 = _y1;
+		x2 = _x2;
+		y2 = _y2;
+		showHint (true);
+	}
+
+	/**
+	   enable showing of hint.
+	 */
+	void showHint(boolean value)
+	{
+		showHint = value;
+		repaint();
+	}
+	
+    protected void paintComponent(Graphics g)
+	{
+		if (!showHint) return;
+		
+        Graphics2D g2 = (Graphics2D) g;
+
+        //g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER, 0.7f));
+		
+		FontRenderContext frc = g2.getFontRenderContext();
+
+		// first determine size.
+		int textHeight = 0;
+		int maxTextWidth = 0;
+
+		Font f = new Font("SansSerif", Font.PLAIN, HINT_FONT_SIZE);
+		Font fb = new Font("SansSerif", Font.BOLD, HINT_FONT_SIZE);
+
+		Map <TextLayout, Point> layouts = new HashMap <TextLayout, Point>();
+
+		int ypos = 0;
+		for (Map.Entry<String, String> entry : hint.entrySet())
+		{
+			TextLayout tl0 = new TextLayout (entry.getKey() + ": ", fb, frc);
+			TextLayout tl1 = new TextLayout (entry.getValue(), f, frc);
+			Rectangle2D b0 = tl0.getBounds();
+			Rectangle2D b1 = tl1.getBounds();
+
+			ypos += tl0.getAscent();
+
+			layouts.put (tl0, new Point (0, ypos));
+			layouts.put (tl1, new Point (10 + (int)b0.getWidth(), ypos));
+
+			ypos += tl0.getDescent() + 10 + tl0.getLeading();
+
+			int width = (int)(b0.getWidth() + b1.getWidth());
+			if (width > maxTextWidth) { maxTextWidth = width; }
+		}
+		int baloonWidth = maxTextWidth + 2 * BALOON_MARGIN;
+		int baloonHeight = ypos + 2 * BALOON_MARGIN;
+
+		// figure out coordinates that are not in the way of the mouse.
+		int xpos = (int)((getSize().getWidth() - baloonWidth) / 2);
+		ypos = alignTop ? BALOON_SPACING : (int)(getSize().getHeight() - baloonHeight - BALOON_SPACING);
+
+		Shape bg = new RoundRectangle2D.Double (
+				xpos, ypos,
+				baloonWidth, baloonHeight,
+				BALOON_MARGIN, BALOON_MARGIN);
+		if (point != null && bg.contains(point))
+		{
+			// toggle alignTop and calculate new shape
+			alignTop = !alignTop;
+			ypos = alignTop ? BALOON_SPACING : (int)(getSize().getHeight() - baloonHeight - BALOON_SPACING);
+			bg = new RoundRectangle2D.Double (
+				xpos, ypos,
+				baloonWidth, baloonHeight,
+				BALOON_MARGIN, BALOON_MARGIN);
+		}
+
+		g2.setPaint (BALOON_PAINT);
+		g2.fill (bg);
+		g2.setColor (Color.BLACK);
+		g2.draw (bg);
+
+		// then do actual drawing
+		for (Map.Entry<TextLayout, Point> entry : layouts.entrySet())
+		{
+			Point p = entry.getValue();
+			TextLayout l = entry.getKey();
+			l.draw(g2, (float)(xpos + BALOON_MARGIN + p.getX()), (float)(ypos + p.getY() + BALOON_MARGIN));
+		}
+
+		g2.dispose();
+    }
+
+    public void eventDispatched(AWTEvent event) {
+        if (event instanceof MouseEvent) {
+            MouseEvent me = (MouseEvent) event;
+            if (!SwingUtilities.isDescendingFrom(me.getComponent(), frame)) {
+                return;
+            }
+            if (me.getID() == MouseEvent.MOUSE_EXITED && me.getComponent() == frame) {
+                point = null;
+            } else {
+                MouseEvent converted = SwingUtilities.convertMouseEvent(me.getComponent(), me, frame.getGlassPane());
+                point = converted.getPoint();
+			}
+            repaint();
+        }
+    }
+
+    /**
+     * If someone adds a mouseListener to the GlassPane or set a new cursor
+     * we expect that he knows what he is doing
+     * and return the super.contains(x, y)
+     * otherwise we return false to respect the cursors
+     * for the underneath components
+     */
+    public boolean contains(int x, int y) {
+        if (getMouseListeners().length == 0 && getMouseMotionListeners().length == 0
+                && getMouseWheelListeners().length == 0
+                && getCursor() == Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR)) {
+            return false;
+        }
+        return super.contains(x, y);
+    }
+}
+

Property changes on: trunk/tools/gpmldiff/src/org/pathvisio/gpmldiff/GlassPane.java
___________________________________________________________________
Name: svn:eol-style
   + native

Index: trunk/tools/gpmldiff/src/org/pathvisio/gpmldiff/Test.java
===================================================================
--- trunk/tools/gpmldiff/src/org/pathvisio/gpmldiff/Test.java	(revision 1133)
+++ trunk/tools/gpmldiff/src/org/pathvisio/gpmldiff/Test.java	(revision 1134)
@@ -174,7 +174,7 @@
 			fail ("No ConverterException expected");
 		}
 		newDoc = new PwyDoc (pwy);
-		SearchNode result = originalDoc.findCorrespondence (newDoc, new BasicSim(), new BasicCost());
+		SearchNode result = originalDoc.findCorrespondence (newDoc, new BetterSim(), new BasicCost());
 		TestDiffOutputter out = new TestDiffOutputter();
 		originalDoc.writeResult (result, newDoc, out);
 		try
@@ -185,7 +185,7 @@
 		{
 			fail ("No exception expected");
 		}
-		out.checkCounts (0, 1, 0, 0); // check that there is one deletion
+		out.checkCounts (0, 1, 0, 0); // check that there is one insertion
 	}
 
 	public void testDiffUnchanged()
@@ -219,7 +219,7 @@
 			fail ("No ConverterException expected");
 		}
 		newDoc = new PwyDoc (pwy);
-		SearchNode result = originalDoc.findCorrespondence (newDoc, new BasicSim(), new BasicCost());
+		SearchNode result = originalDoc.findCorrespondence (newDoc, new BetterSim(), new BasicCost());
 		TestDiffOutputter out = new TestDiffOutputter();
 		originalDoc.writeResult (result, newDoc, out);
 		try
@@ -230,7 +230,7 @@
 		{
 			fail ("No exception expected");
 		}
-		out.checkCounts (0, 0, 0, 0); // check that there is one deletion
+		out.checkCounts (1, 0, 0, 0); // check that there is one deletion
 	}
 
 	public void testDiffDeletion()
@@ -260,7 +260,7 @@
 			fail ("No ConverterException expected");
 		}
 		newDoc = new PwyDoc (pwy);
-		SearchNode result = originalDoc.findCorrespondence (newDoc, new BasicSim(), new BasicCost());
+		SearchNode result = originalDoc.findCorrespondence (newDoc, new BetterSim(), new BasicCost());
 		TestDiffOutputter out = new TestDiffOutputter();
 		originalDoc.writeResult (result, newDoc, out);
 		try
@@ -304,7 +304,7 @@
 			fail ("No ConverterException expected");
 		}
 		newDoc = new PwyDoc (pwy);
-		SearchNode result = originalDoc.findCorrespondence (newDoc, new BasicSim(), new BasicCost());
+		SearchNode result = originalDoc.findCorrespondence (newDoc, new BetterSim(), new BasicCost());
 		TestDiffOutputter out = new TestDiffOutputter();
 		originalDoc.writeResult (result, newDoc, out);
 		try
@@ -315,7 +315,8 @@
 		{
 			fail ("No exception expected");
 		}
-		out.checkCounts (0, 0, 3, 2); // check that there is one deletion
+		out.checkCounts (0, 0, 3, 2);
+        // check that that there are three modifications spread over two elements
 	}
 
 	public void testPatchModification()
Index: trunk/tools/gpmldiff/src/org/pathvisio/gpmldiff/GpmlDiffWindow.java
===================================================================
--- trunk/tools/gpmldiff/src/org/pathvisio/gpmldiff/GpmlDiffWindow.java	(revision 1133)
+++ trunk/tools/gpmldiff/src/org/pathvisio/gpmldiff/GpmlDiffWindow.java	(revision 1134)
@@ -49,7 +49,8 @@
 	double zoomFactor = 100;
 	JPanel centerPanel = null;
 	
-
+	GlassPane glassPane;
+	
 	public void setFile (int pwyType, File f)
 	{
 		Pathway pwy = new Pathway();
@@ -219,6 +220,12 @@
 		Container contents = getContentPane();
 		contents.setLayout (new BoxLayout(contents, BoxLayout.X_AXIS));
 		setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
+
+		glassPane = new GlassPane(this);
+		setGlassPane (glassPane);
+		glassPane.setVisible(true);
+		Toolkit.getDefaultToolkit().addAWTEventListener(
+			glassPane, AWTEvent.MOUSE_MOTION_EVENT_MASK | AWTEvent.MOUSE_EVENT_MASK);
 		
 		menubar = new JMenuBar();
 		addMenuActions ();
@@ -229,13 +236,8 @@
 			pwyPane[i] = new JScrollPane();
 		}
 
-		centerPanel = new JPanel();
-		
 		contents.add (pwyPane[PWY_OLD]);
 		pwyPane[PWY_OLD].setPreferredSize (new Dimension (400, 300));
-		contents.add (centerPanel);
-		centerPanel.setPreferredSize (new Dimension (200, 300));
-		centerPanel.setMinimumSize (new Dimension (200, 300));
 		contents.add (pwyPane[PWY_NEW]);
 		pwyPane[PWY_NEW].setPreferredSize (new Dimension (400, 300));
 		validate();
@@ -245,7 +247,7 @@
 	{
 		if (e.getType() == VPathwayEvent.ELEMENT_CLICKED_DOWN)
 		{
-			if (e.getSource() == view[PWY_OLD])
+/*			if (e.getSource() == view[PWY_OLD])
 			{
 				System.out.println ("Element clicked in old pathway");
 			}
@@ -253,13 +255,17 @@
 			{
 				System.out.println ("Element clicked in new pathway");
 			}
-			if (outputter != null)
+*/			if (outputter != null)
 			{
 				PanelOutputter.ModData mod = outputter.modsByElt.get (e.getAffectedElement());
 				if (mod != null)
 				{
-					System.out.println ("Modifiied! " + mod.hint);
+					glassPane.setHint (mod.hints, 0, 0, 0, 0);
 				}
+				else
+				{
+					glassPane.showHint (false);
+				}
 			}		
 		}
 	}
Index: trunk/tools/gpmldiff/src/org/pathvisio/gpmldiff/PwyElt.java
===================================================================
--- trunk/tools/gpmldiff/src/org/pathvisio/gpmldiff/PwyElt.java	(revision 1133)
+++ trunk/tools/gpmldiff/src/org/pathvisio/gpmldiff/PwyElt.java	(revision 1134)
@@ -49,6 +49,16 @@
 			result += ",x1=" + elt.getProperty(PropertyType.STARTX);
 		if (props.contains(PropertyType.STARTY))
 			result += ",y1=" + elt.getProperty(PropertyType.STARTY);		
+		if (props.contains(PropertyType.ENDX))
+			result += ",x2=" + elt.getProperty(PropertyType.ENDX);
+		if (props.contains(PropertyType.ENDY))
+			result += ",y2=" + elt.getProperty(PropertyType.ENDY);		
+		if (props.contains(PropertyType.GRAPHID))
+			result += ",id=" + elt.getProperty(PropertyType.GRAPHID);
+		if (props.contains(PropertyType.MAPINFONAME))
+			result += ",name=" + elt.getProperty(PropertyType.MAPINFONAME);
+		if (props.contains(PropertyType.AUTHOR))
+			result += ",author=" + elt.getProperty(PropertyType.AUTHOR);
 		result += "]";
 		return result;
 	}
Index: trunk/tools/gpmldiff/src/org/pathvisio/gpmldiff/GpmlDiff.java
===================================================================
--- trunk/tools/gpmldiff/src/org/pathvisio/gpmldiff/GpmlDiff.java	(revision 1133)
+++ trunk/tools/gpmldiff/src/org/pathvisio/gpmldiff/GpmlDiff.java	(revision 1134)
@@ -30,8 +30,10 @@
 	static File oldFile = null;
 	static File newFile = null;
 	static String outputType = "svg";
-	static final String[] outputTypes = {"svg", "dgpml", "basic"};
-
+	static final String[] outputTypes = {"svg", "dgpml", "basic", "table"};
+	static String simFunType = "better";
+	static final String[] simFunTypes = {"basic", "better"};
+	
 	/**
 	   Parse Command-line Options
 	*/
@@ -39,25 +41,46 @@
 	{
 		int pos = 0;
 		String error = null;
-		if (pos >= argv.length) error = "Expected -o or old pathway file";
-		if (error == null && argv[pos].equals ("-o"))
+		if (pos >= argv.length) error = "Expected option or old pathway file";
+		while (error == null && (argv[pos].equals ("-o") || argv[pos].equals ("-s")))
 		{
-			pos++;
-			if (pos >= argv.length) error = "Expected -o or old pathway file";
-			if (error == null)
-			{				
-				outputType = argv[pos];
-				if (!Arrays.asList(outputTypes).contains (outputType))
-				{
-					error = "Outputtype " + outputType + " is not allowed";
+			if (argv[pos].equals ("-o"))
+			{
+				pos++;
+				if (pos >= argv.length) error = "Expected output type after -o";
+				if (error == null)
+				{				
+					outputType = argv[pos];
+					if (!Arrays.asList(outputTypes).contains (outputType))
+					{
+						error = "Outputtype " + outputType + " is not allowed";
+					}
+					if (error == null)
+					{
+						pos++;
+						if (pos >= argv.length) error = "Expected option or old pathway file";
+					}
 				}
+			}
+			else if (argv[pos].equals ("-s"))
+			{
+				pos++;
+				if (pos >= argv.length) error = "Expected simfun type after -s";
 				if (error == null)
-				{
-					pos++;
-					if (pos >= argv.length) error = "expected old pathway file";
+				{				
+					simFunType = argv[pos];
+					if (!Arrays.asList(simFunTypes).contains (simFunType))
+					{
+						error = "SimFunType " + simFunType + " is not allowed";
+					}
+					if (error == null)
+					{
+						pos++;
+						if (pos >= argv.length) error = "Expected option or old pathway file";
+					}
 				}
 			}
-		}			
+		}
 		if (error == null)
 		{
 			oldFile = new File(argv[pos]);
@@ -116,33 +139,51 @@
 		{
 			PwyDoc oldDoc = PwyDoc.read (oldFile);
 			PwyDoc newDoc = PwyDoc.read (newFile);
-			SearchNode result = oldDoc.findCorrespondence (newDoc, new BetterSim(), new BasicCost());
 
-			DiffOutputter out = null;
-			if (outputType.equals ("basic"))
+			SimilarityFunction simFun;
+			if (simFunType.equals ("basic"))
 			{
-				out = new BasicOutputter();
+				simFun = new BasicSim();
 			}
-			else if (outputType.equals ("dgpml"))
+			else
 			{
-				out = new DgpmlOutputter();
+				simFun = new BetterSim();
 			}
-			else if (outputType.equals ("svg"))
-			{				
-				out = new SvgOutputter(oldDoc, newDoc);
+				
+			if (outputType.equals ("table"))
+			{
+				PwyDoc.printSimTable (oldDoc, newDoc, simFun);
 			}
 			else
 			{
-				System.out.println ("Unknown ouput-type " + outputType);
-				System.exit (1);
+				SearchNode result = oldDoc.findCorrespondence (newDoc, simFun, new BasicCost());
+				
+				DiffOutputter out = null;
+				if (outputType.equals ("basic"))
+				{
+					out = new BasicOutputter();
+				}
+				else if (outputType.equals ("dgpml"))
+				{
+					out = new DgpmlOutputter();
+				}
+				else if (outputType.equals ("svg"))
+				{				
+					out = new SvgOutputter(oldDoc, newDoc);
+				}
+				else
+				{
+					System.out.println ("Unknown ouput-type " + outputType);
+					System.exit (1);
+				}
+				assert (out != null);
+				oldDoc.writeResult (result, newDoc, out);
+				try
+				{
+					out.flush();
+				}
+				catch (IOException e) { e.printStackTrace(); }
 			}
-			assert (out != null);
-			oldDoc.writeResult (result, newDoc, out);
-			try
-			{
-				out.flush();
-			}
-			catch (IOException e) { e.printStackTrace(); }
 		}
 	}
 }
\ No newline at end of file
Index: trunk/tools/gpmldiff/src/org/pathvisio/gpmldiff/PanelOutputter.java
===================================================================
--- trunk/tools/gpmldiff/src/org/pathvisio/gpmldiff/PanelOutputter.java	(revision 1133)
+++ trunk/tools/gpmldiff/src/org/pathvisio/gpmldiff/PanelOutputter.java	(revision 1134)
@@ -75,19 +75,19 @@
 	public class ModData implements Comparable<ModData>
 	{
 		int midy;
-		String hint;
+		Map <String, String> hints;
 		int x1;
 		int y1;
 		int x2;
 		int y2;
 
-		ModData (int x1, int y1, int x2, int y2, String hint)
+		ModData (int x1, int y1, int x2, int y2, Map<String, String> hints)
 		{
 			this.x1 = x1;
 			this.y1 = y1;
 			this.x2 = x2;
 			this.y2 = y2;
-			this.hint = hint;
+			this.hints = hints;
 		}
 
 		/**
@@ -120,13 +120,13 @@
 
 	PathwayElement curOldElt = null;
 	PathwayElement curNewElt = null;
-	Set<String> curHint = null;
+	Map<String, String> curHint = null;
 	
 	public void modifyStart (PathwayElement oldElt, PathwayElement newElt)
 	{
 		curOldElt = oldElt;
 		curNewElt = newElt;
-		curHint = new HashSet<String>();
+		curHint = new HashMap<String, String>();
 	}
 
 	public void flush() throws IOException
@@ -145,20 +145,12 @@
 		veltNew.highlight (Color.YELLOW);
 		Rectangle r2 = veltNew.getVBounds();
 
-		String completeHint = "";
-		for (String hint : curHint)
-		{
-			completeHint += hint;
-			completeHint += ", ";
-		}
-		completeHint += "changed";
-
 		ModData mod = new ModData (
 				(int)(r1.getX() + r1.getWidth() / 2),
 				(int)(r1.getY() + r1.getHeight() / 2),
 				(int)(r2.getX() + r2.getWidth() / 2),
 				(int)(r2.getY() + r2.getHeight() / 2),
-				completeHint);
+				curHint);
 
 		modifications.add (mod);
 		modsByElt.put (veltOld, mod);
@@ -176,24 +168,50 @@
 	public void modifyAttr(String attr, String oldVal, String newVal)
 	{
 		if (attr.equalsIgnoreCase("centerx") || 
-			attr.equalsIgnoreCase("centery") ||
+			attr.equalsIgnoreCase("centery"))
+		{
+			String temp =
+				curOldElt.getMCenterX() + ", " +
+				curOldElt.getMCenterY() + " -> " +
+				curNewElt.getMCenterX() + ", " +
+				curNewElt.getMCenterY();
+			curHint.put ("Center", temp);
+		}
+		else if (
 			attr.equalsIgnoreCase("endx") ||
 			attr.equalsIgnoreCase("endy") ||
 			attr.equalsIgnoreCase("startx") ||
 			attr.equalsIgnoreCase("starty"))
 		{
-			curHint.add ("position");
+			String temp = 
+				curOldElt.getMStartX() + ", " +
+				curOldElt.getMStartY() + " -> " +
+				curNewElt.getMStartX() + ", " +
+				curNewElt.getMStartY() + " " +
+				curOldElt.getMEndX() + ", " +
+				curOldElt.getMEndY() + " -> " +
+				curNewElt.getMEndX() + ", " +
+				curNewElt.getMEndY();
+			curHint.put ("Position", temp);
 		}
 		else if (
 			attr.equalsIgnoreCase("width") ||
 			attr.equalsIgnoreCase("height")
 			)
 		{
-			curHint.add ("size");
+			String temp =
+				curOldElt.getMWidth() + ", " +
+				curOldElt.getMHeight() + "-> " +
+				curNewElt.getMWidth() + ", " +
+				curNewElt.getMHeight();
+			curHint.put ("Size", temp);
 		}
 		else
 		{
-			curHint.add (attr);
+			curHint.put (
+				attr,
+				" \"" + oldVal + "\" -> \"" + newVal + "\""
+				);
 		}
 	}
 
Index: trunk/tools/gpmldiff/src/org/pathvisio/gpmldiff/SimilarityFunction.java
===================================================================
--- trunk/tools/gpmldiff/src/org/pathvisio/gpmldiff/SimilarityFunction.java	(revision 1133)
+++ trunk/tools/gpmldiff/src/org/pathvisio/gpmldiff/SimilarityFunction.java	(revision 1134)
@@ -21,6 +21,6 @@
    abstract base class for implementations of similarity functions
 */
 abstract class SimilarityFunction
-{
+{	
 	abstract public int getSimScore (PathwayElement oldElt, PathwayElement newElt);
 }
\ No newline at end of file
Index: trunk/tools/gpmldiff/src/org/pathvisio/gpmldiff/BetterSim.java
===================================================================
--- trunk/tools/gpmldiff/src/org/pathvisio/gpmldiff/BetterSim.java	(revision 1133)
+++ trunk/tools/gpmldiff/src/org/pathvisio/gpmldiff/BetterSim.java	(revision 1134)
@@ -20,6 +20,7 @@
 
 import org.pathvisio.model.PathwayElement;
 import org.pathvisio.model.PropertyType;
+import org.pathvisio.model.ObjectType;
 
 class BetterSim extends SimilarityFunction
 {
@@ -40,6 +41,26 @@
 		int possibleScore = 0;
 		int actualScore = 0;
 
+		
+		{
+			int max;
+			if (oldOt == ObjectType.LEGEND || oldOt == ObjectType.INFOBOX)
+			{
+				max = 80;
+			}
+			else
+			{
+				max = 20;
+			}
+			int score = 0;
+			if (oldOt == newOt)
+			{
+				score = max;
+			}
+			possibleScore += max;
+			actualScore += score;
+		}
+		
 		for (PropertyType newProp : newProps)
 		{
 			if (oldProps.contains(newProp))
@@ -54,7 +75,7 @@
 				{
 					case GRAPHID:
 					case GROUPID:
-						max = 80;
+						max = 600 / oldN;
 						if (oo == null ? no == null : oo.equals (no))
 						{
 							score = max;
@@ -66,15 +87,15 @@
 					case ENDY:
 					case STARTX:		
 					case STARTY:
-						max = 10;
+						max = 100 / oldN;
 						double delta = (Double)oo - (Double)no;
 						if (delta < 0.5)
 						{
-							score = 10;
+							score = max;
 						}
 						else if (delta >= 0.5 && delta < 512)
 						{
-							score = 9 - (int)(Math.log10 (delta) / Math.log10 (2));
+							score = ((9 - (int)(Math.log10 (delta) / Math.log10 (2))) * max) / 10;
 						}
 						else
 						{
@@ -82,7 +103,7 @@
 						}							
 						break;
 					default:
-						max = 10;
+						max = 100 / oldN;
 						if (oo == null ? no == null : oo.equals (no))
 						{
 							score = max;
Index: trunk/tools/gpmldiff/table2xls.pl
===================================================================
--- trunk/tools/gpmldiff/table2xls.pl	(revision 0)
+++ trunk/tools/gpmldiff/table2xls.pl	(revision 1134)
@@ -0,0 +1,129 @@
+#!/usr/bin/perl
+
+=item
+
+table2xls can handle the table output of gpmldiff
+and turn it into an excel sheet.
+
+Usage example:
+
+ ./gpmldiff.sh \
+    -o table \
+	-s better \
+	testcases/Hs_Wnt_signaling.gpml 
+	testcases/Hs_Wnt_signaling_modified.gpml 
+ | 
+	./table2xls.pl better.xls
+=cut
+
+use strict;
+use warnings;
+
+use Spreadsheet::WriteExcel::Big;
+use Spreadsheet::WriteExcel::Utility;
+
+#################
+#   config
+#################
+
+
+my $fnOut = "output.xls";
+
+if (@ARGV == 1)
+{
+	$fnOut = shift @ARGV;
+}
+
+print "Writing excel sheet to $fnOut\n";
+
+my $workbook = Spreadsheet::WriteExcel::Big->new($fnOut);
+
+my $header_format = $workbook->add_format(); # Add a format
+$header_format->set_text_wrap();
+$header_format->set_size (7);
+$header_format->set_bg_color ('yellow');
+
+my $data_format1 = $workbook->add_format();
+
+my $data_format2 = $workbook->add_format();
+$data_format2->set_bold();
+
+my $worksheet = $workbook->add_worksheet("Similarity Matrix");
+
+my $row = 0;
+my $col = 0;
+my $maxcol = 0;
+
+while ($_ = <STDIN>)
+{
+	chomp;
+	my @fields = split /\t/;
+	
+	for my $field (@fields)
+	{
+		my $format;
+		
+		if ($col == 0 || $row == 0)
+		{
+			$format = $header_format;
+		}
+		elsif ($field >= 50)
+		{
+			$format = $data_format2;
+		}
+		else
+		{
+			$format = $data_format1;
+		}
+		$worksheet->write($row, $col, $field, $format);
+		$col++;
+	}
+	# record maximum row width
+	if ($col > $maxcol) { $maxcol = $col; }
+	
+	$col = 0;
+	$row++;
+}
+my $maxrow = $row;
+
+$worksheet->freeze_panes(1, 1);
+# set column width
+$worksheet->set_column (1, $maxcol - 1, 12);
+$worksheet->set_column (0, 1, 20);
+
+
+for $row (1 .. $maxrow-1)
+{
+	$worksheet->write_formula ($row, $maxcol, 
+		"=MAX(" .xl_rowcol_to_cell($row, 1) . ":" 
+		. xl_rowcol_to_cell($row, $maxcol - 1). ")", $data_format1);
+	$worksheet->write_formula ($row, $maxcol+1, 
+		"=COUNTIF(" .xl_rowcol_to_cell($row, 1) . ":" 
+		. xl_rowcol_to_cell($row, $maxcol - 1) . "," .
+		xl_rowcol_to_cell($row, $maxcol) . ")", $data_format1);
+}
+
+for $col (1 .. $maxcol-1)
+{
+	$worksheet->write_formula ($maxrow, $col, 
+		"=MAX(" .xl_rowcol_to_cell(1, $col) . ":" 
+		. xl_rowcol_to_cell($maxrow - 1, $col). ")", $data_format1);
+	$worksheet->write_formula ($maxrow + 1, $col, 
+		"=COUNTIF(" .xl_rowcol_to_cell(1 , $col) . ":" 
+		. xl_rowcol_to_cell($maxrow - 1, $col) . "," .
+		xl_rowcol_to_cell($maxrow, $col) . ")", $data_format1);
+}
+
+
+$workbook->close();
+
+
+if ($^O eq "MSWin32") 
+{
+	system ("start", $fnOut);
+}
+else
+{
+	#this works on ubuntu breezy linux, and probably other current gnome-based distros
+	system ("gnome-open", $fnOut);
+}
\ No newline at end of file

Property changes on: trunk/tools/gpmldiff/table2xls.pl
___________________________________________________________________
Name: svn:eol-style
   + native
Name: svn:executable
   + *

